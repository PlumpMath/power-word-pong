<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_wizard_walk_B</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>acc = 0.5
max_speed = 1;

h_speed = 0;
v_speed = 0;

selected = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
h_in = 0;
v_in = 0;

is_attacking = place_meeting(x,y,o_ball);

if (is_attacking == false) {
    
    if (global.use_ai[team])
    {
        f_ai_controller();
    }
    else
    {
        f_user_controller();
    }

    // Establecer velocidades.
    if (h_in==0)
    {
        h_speed = f_diff(h_speed, acc*3, 0);
    }
    else if (h_in&gt;0)
    {
        h_speed = f_diff(h_speed, acc, max_speed);
    }
    else
    {
        h_speed = f_diff(h_speed, acc, -max_speed);
    }
    
    if (v_in==0)
    {
        v_speed = f_diff(v_speed, acc*3, 0);
    }
    else if (v_in&gt;0)
    {
        v_speed = f_diff(v_speed, acc, max_speed);
    }
    else
    {
        v_speed = f_diff(v_speed, acc, -max_speed);
    }
    
    // Animar.
    sprite_index = sprite_walk;
    if (h_speed==0 &amp;&amp; v_speed==0)
    {
        image_speed = 0;
    }
    else
    {
        image_speed = 3/room_speed;
    }
    
    // Mirar hacia la direcci√≥n correcta.
    if (h_speed!=0) { image_xscale = sign(h_speed); }
    
    // Moverse.
    x += h_speed;
    y += v_speed;
    
    x = clamp(x, global.boundaries[3], global.boundaries[1]);
    y = clamp(y, global.boundaries[0], global.boundaries[2]);
}
else if (is_attacking)
{

    sprite_index = sprite_attack;
    image_speed = 5/room_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (team==0)
{
    sprite_walk = s_wizard_walk_B;
    sprite_attack = s_wizard_attack_B;
}
else if (team==1)
{
    sprite_walk = s_wizard_walk_R;
    sprite_attack = s_wizard_attack_R;
}

sprite_index = sprite_walk;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
